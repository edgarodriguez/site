<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spatial Analysis | [ Sustainability &#43; Data ] · Science</title>
    <link>/site/category/spatial-analysis/</link>
      <atom:link href="/site/category/spatial-analysis/index.xml" rel="self" type="application/rss+xml" />
    <description>Spatial Analysis</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©2020 Edgar Rodríguez-Huerta</copyright><lastBuildDate>Wed, 02 Sep 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/site/media/logo-edgarodriguez.png</url>
      <title>Spatial Analysis</title>
      <link>/site/category/spatial-analysis/</link>
    </image>
    
    <item>
      <title>Creating maps with Leaflet Package con Rmd</title>
      <link>/site/post/coursera-leaflet/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/site/post/coursera-leaflet/</guid>
      <description>
&lt;script src=&#34;/site/site/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/site/site/rmarkdown-libs/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/site/site/rmarkdown-libs/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this example, we created with &lt;code&gt;Leaflet&lt;/code&gt; package. Also, I used &lt;code&gt;dplyr&lt;/code&gt; for cleaning the data and &lt;code&gt;widgetframe&lt;/code&gt; for render the map correctly.&lt;/p&gt;
&lt;p&gt;This map shows water allocations according to REPDA by CONAGUA in Yucatán Península, México, by September 2020.
&lt;em&gt;Coordinates are not validated&lt;/em&gt;
### First step: Download and data cleaning&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(leaflet)
library(widgetframe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: htmlwidgets&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(htmlwidgets)
library(htmltools)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url &amp;lt;-&amp;quot;http://201.116.60.46/DatosAbiertos/Otorgamiento_de_Concesiones.zip&amp;quot;

temp &amp;lt;- tempfile()
temp2 &amp;lt;- tempfile()
download.file(url, temp, mode=&amp;quot;wb&amp;quot;)
unzip(zipfile = temp, exdir = temp2)
data &amp;lt;- read.csv(file = paste0(temp2,&amp;quot;\\CONCESIONES&amp;quot;,&amp;quot;\\ANEXOS_SUBTERRANEOS.csv&amp;quot;,sep=&amp;quot;&amp;quot;),encoding = &amp;quot;UTF-8&amp;quot;)
data1 &amp;lt;- read.csv(file = paste0(temp2,&amp;quot;\\CONCESIONES&amp;quot;,&amp;quot;\\CONCESIONES.csv&amp;quot;,sep=&amp;quot;&amp;quot;),encoding = &amp;quot;UTF-8&amp;quot;)
data$lat=data$GRADOS.LATITUD+((1/60)*data$MINUTOS.LATITUD)+((1/3600)*data$SEGUNDOS.LATITUD)
data$lng=((data$GRADOS.LONGITUD)+((1/60)*data$MINUTOS.LONGITUD)+((1/3600)*data$SEGUNDOS.LONGITUD))*-1
data_all &amp;lt;- merge(x = data,y= data1, by = &amp;quot;X.U.FEFF.TITULO&amp;quot;, all.x = TRUE)

df &amp;lt;- filter(data_all, NOMBRE.DE.ESTADO %in% c(&amp;quot;CAMPECHE&amp;quot;,&amp;quot;QUINTANA ROO&amp;quot;,&amp;quot;YUCATAN&amp;quot;),lat&amp;gt;=17.5,lat&amp;lt;=22,lng&amp;lt;=-87,lng&amp;gt;=-92) #filter by State and coordinates

df &amp;lt;- data.frame(lat=c(df$lat),lng=c(df$lng),uso=c(df$USO.QUE.AMPARA.EL.TITULO),vol=df$VOLUMEN.ANUAL.EN.m3)
unlink(c(temp, temp2))

pal &amp;lt;- colorFactor(c(&amp;quot;cyan3&amp;quot;,&amp;quot;darkgreen&amp;quot;,&amp;quot;sienna&amp;quot;,&amp;quot;grey77&amp;quot;,&amp;quot;dodgerblue4&amp;quot;,
                     &amp;quot;red4&amp;quot;,&amp;quot;tan4&amp;quot;,&amp;quot;darkslategrey&amp;quot;,&amp;quot;gold3&amp;quot;),df$uso) #Set colors&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;generate-the-map-with-leaflet-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Generate the map with Leaflet package&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Clusters count number of allocation in the region. Meanwhile, circles describe each concession by type and volume&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_map &amp;lt;- leaflet() %&amp;gt;%
    addTiles() %&amp;gt;% # It generate the main layer
    addMarkers(lng=df$lng, lat=df$lat, popup = paste(df$uso,df$vol,&amp;quot;m3/year&amp;quot;),clusterOptions = markerClusterOptions()) %&amp;gt;% # Define marks
    addCircles(lng=df$lng, lat=df$lat,weight = 1, radius = sqrt(df$vol) * 2, color=pal(df$uso)) %&amp;gt;%
    addLegend(pal = pal,values = df$uso)%&amp;gt;%
    frameWidget()

my_map %&amp;gt;%
    frameWidget()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in frameWidget(.): Re-framing an already framed widget with new params&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-02-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_map&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-02-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
Now, we use &lt;code&gt;htmlwidgets&lt;/code&gt; to save the html file&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;currentWD &amp;lt;- getwd()
dir.create(&amp;quot;static/leaflet&amp;quot;,showWarnings = FALSE)
#setwd(&amp;quot;static/leaflet&amp;quot;)
htmlwidgets::saveWidget(my_map, file =&amp;quot;my_map.html&amp;quot;,selfcontained=TRUE)
#setwd(currentWD)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;oa
&lt;iframe seamless src=&#34;/site/static/post/2020-09-01-coursera-leaflet.en_files/my_map.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
ob
&lt;iframe seamless src=&#34;/site/static/post/2020-09-01-coursera-leaflet.en_files/my_map/index.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
oc
&lt;iframe seamless src=&#34;/site/static/leaflet/my_map.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
od
&lt;iframe seamless src=&#34;/site/static/leaflet/my_map/index.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;opcion 2&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;widgetframe::frameWidget(my_map,width=&amp;#39;90%&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in widgetframe::frameWidget(my_map, width = &amp;quot;90%&amp;quot;): Re-framing an
## already framed widget with new params&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-02-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-4.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;opcion 3&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;frameWidget(my_map,width=&amp;#39;90%&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in frameWidget(my_map, width = &amp;quot;90%&amp;quot;): Re-framing an already framed
## widget with new params&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-02-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-5.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating maps with Leaflet Package</title>
      <link>/site/post/coursera-leaflet/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/site/post/coursera-leaflet/</guid>
      <description>&lt;p&gt;In this example, we created with &lt;code&gt;Leaflet&lt;/code&gt; package. Also, I used &lt;code&gt;dplyr&lt;/code&gt; for cleaning the data and &lt;code&gt;widgetframe&lt;/code&gt; for render the map correctly.&lt;/p&gt;
&lt;p&gt;This map shows water allocations according to REPDA by CONAGUA in Yucatán Península, México, by September 2020.
&lt;em&gt;Coordinates are not validated&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;first-step-download-and-data-cleaning&#34;&gt;First step: Download and data cleaning&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(leaflet)
library(widgetframe)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: htmlwidgets
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(htmlwidgets)
library(htmltools)
library(dplyr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;url &amp;lt;-&amp;quot;http://201.116.60.46/DatosAbiertos/Otorgamiento_de_Concesiones.zip&amp;quot;

temp &amp;lt;- tempfile()
temp2 &amp;lt;- tempfile()
download.file(url, temp, mode=&amp;quot;wb&amp;quot;)
unzip(zipfile = temp, exdir = temp2)
data &amp;lt;- read.csv(file = paste0(temp2,&amp;quot;\\CONCESIONES&amp;quot;,&amp;quot;\\ANEXOS_SUBTERRANEOS.csv&amp;quot;,sep=&amp;quot;&amp;quot;),encoding = &amp;quot;UTF-8&amp;quot;)
data1 &amp;lt;- read.csv(file = paste0(temp2,&amp;quot;\\CONCESIONES&amp;quot;,&amp;quot;\\CONCESIONES.csv&amp;quot;,sep=&amp;quot;&amp;quot;),encoding = &amp;quot;UTF-8&amp;quot;)
data$lat=data$GRADOS.LATITUD+((1/60)*data$MINUTOS.LATITUD)+((1/3600)*data$SEGUNDOS.LATITUD)
data$lng=((data$GRADOS.LONGITUD)+((1/60)*data$MINUTOS.LONGITUD)+((1/3600)*data$SEGUNDOS.LONGITUD))*-1
data_all &amp;lt;- merge(x = data,y= data1, by = &amp;quot;X.U.FEFF.TITULO&amp;quot;, all.x = TRUE)

df &amp;lt;- filter(data_all, NOMBRE.DE.ESTADO %in% c(&amp;quot;CAMPECHE&amp;quot;,&amp;quot;QUINTANA ROO&amp;quot;,&amp;quot;YUCATAN&amp;quot;),lat&amp;gt;=17.5,lat&amp;lt;=22,lng&amp;lt;=-87,lng&amp;gt;=-92) #filter by State and coordinates

df &amp;lt;- data.frame(lat=c(df$lat),lng=c(df$lng),uso=c(df$USO.QUE.AMPARA.EL.TITULO),vol=df$VOLUMEN.ANUAL.EN.m3)
unlink(c(temp, temp2))

pal &amp;lt;- colorFactor(c(&amp;quot;cyan3&amp;quot;,&amp;quot;darkgreen&amp;quot;,&amp;quot;sienna&amp;quot;,&amp;quot;grey77&amp;quot;,&amp;quot;dodgerblue4&amp;quot;,
                     &amp;quot;red4&amp;quot;,&amp;quot;tan4&amp;quot;,&amp;quot;darkslategrey&amp;quot;,&amp;quot;gold3&amp;quot;),df$uso) #Set colors
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;generate-the-map-with-leaflet-package&#34;&gt;Generate the map with Leaflet package&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Clusters count number of allocation in the region. Meanwhile, circles describe each concession by type and volume&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_map &amp;lt;- leaflet() %&amp;gt;%
    addTiles() %&amp;gt;% # It generate the main layer
    addMarkers(lng=df$lng, lat=df$lat, popup = paste(df$uso,df$vol,&amp;quot;m3/year&amp;quot;),clusterOptions = markerClusterOptions()) %&amp;gt;% # Define marks
    addCircles(lng=df$lng, lat=df$lat,weight = 1, radius = sqrt(df$vol) * 2, color=pal(df$uso)) %&amp;gt;%
    addLegend(pal = pal,values = df$uso)%&amp;gt;%
    frameWidget()

my_map %&amp;gt;%
    frameWidget()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in frameWidget(.): Re-framing an already framed widget with new params
&lt;/code&gt;&lt;/pre&gt;
&lt;!--html_preserve--&gt;&lt;div id=&#34;htmlwidget-d048a0f7a84190e86d5e&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-d048a0f7a84190e86d5e&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-01-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;&lt;!--/html_preserve--&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_map
&lt;/code&gt;&lt;/pre&gt;
&lt;!--html_preserve--&gt;&lt;div id=&#34;htmlwidget-1f186e75e0def6e65a15&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1f186e75e0def6e65a15&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-01-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;&lt;!--/html_preserve--&gt;
&lt;p&gt;Now, we use &lt;code&gt;htmlwidgets&lt;/code&gt; to save the html file&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;currentWD &amp;lt;- getwd()
dir.create(&amp;quot;static/leaflet&amp;quot;,showWarnings = FALSE)
#setwd(&amp;quot;static/leaflet&amp;quot;)
htmlwidgets::saveWidget(my_map, file =&amp;quot;my_map.html&amp;quot;,selfcontained=TRUE)
#setwd(currentWD)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;oa&lt;/p&gt;
&lt;iframe seamless src=&#34;/site/static/post/2020-09-01-coursera-leaflet.en_files/my_map.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
ob
&lt;iframe seamless src=&#34;/site/static/post/2020-09-01-coursera-leaflet.en_files/my_map/index.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
oc
&lt;iframe seamless src=&#34;/site/static/leaflet/my_map.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
od
&lt;iframe seamless src=&#34;/site/static/leaflet/my_map/index.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;opcion 2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;widgetframe::frameWidget(my_map,width=&#39;90%&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in widgetframe::frameWidget(my_map, width = &amp;quot;90%&amp;quot;): Re-framing an
## already framed widget with new params
&lt;/code&gt;&lt;/pre&gt;
&lt;!--html_preserve--&gt;&lt;div id=&#34;htmlwidget-4c7af2b9452e8ce42610&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4c7af2b9452e8ce42610&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-01-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-4.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;&lt;!--/html_preserve--&gt;
&lt;p&gt;opcion 3&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;frameWidget(my_map,width=&#39;90%&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in frameWidget(my_map, width = &amp;quot;90%&amp;quot;): Re-framing an already framed
## widget with new params
&lt;/code&gt;&lt;/pre&gt;
&lt;!--html_preserve--&gt;&lt;div id=&#34;htmlwidget-be8e778387f370be4c97&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-be8e778387f370be4c97&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/site/post/2020-09-01-coursera-leaflet.en_files/figure-html//widgets/widget_unnamed-chunk-5.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;&lt;!--/html_preserve--&gt;
</description>
    </item>
    
  </channel>
</rss>
